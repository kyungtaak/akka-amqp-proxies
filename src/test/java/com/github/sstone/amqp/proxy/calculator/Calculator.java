// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/test/resource/calculator.proto

package com.github.sstone.amqp.proxy.calculator;

public final class Calculator {
  private Calculator() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AddRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
  }
  public static final class AddRequest extends
      com.google.protobuf.GeneratedMessage
      implements AddRequestOrBuilder {
    // Use AddRequest.newBuilder() to construct.
    private AddRequest(Builder builder) {
      super(builder);
    }
    private AddRequest(boolean noInit) {}
    
    private static final AddRequest defaultInstance;
    public static AddRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.github.sstone.amqp.proxy.calculator.Calculator.AddRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_fieldAccessorTable;
      }
      
      // Construct using com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.getDescriptor();
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest getDefaultInstanceForType() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.getDefaultInstance();
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest build() {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest buildPartial() {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest result = new com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest) {
          return mergeFrom((com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest other) {
        if (other == com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.github.sstone.amqp.proxy.calculator.AddRequest)
    }
    
    static {
      defaultInstance = new AddRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.github.sstone.amqp.proxy.calculator.AddRequest)
  }
  
  public interface AddResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
    
    // required int32 sum = 3;
    boolean hasSum();
    int getSum();
  }
  public static final class AddResponse extends
      com.google.protobuf.GeneratedMessage
      implements AddResponseOrBuilder {
    // Use AddResponse.newBuilder() to construct.
    private AddResponse(Builder builder) {
      super(builder);
    }
    private AddResponse(boolean noInit) {}
    
    private static final AddResponse defaultInstance;
    public static AddResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // required int32 sum = 3;
    public static final int SUM_FIELD_NUMBER = 3;
    private int sum_;
    public boolean hasSum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSum() {
      return sum_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      sum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, sum_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.github.sstone.amqp.proxy.calculator.Calculator.AddResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_fieldAccessorTable;
      }
      
      // Construct using com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.getDescriptor();
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse getDefaultInstanceForType() {
        return com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.getDefaultInstance();
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse build() {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse buildPartial() {
        com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse result = new com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sum_ = sum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse) {
          return mergeFrom((com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse other) {
        if (other == com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasSum()) {
          setSum(other.getSum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasSum()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sum_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 sum = 3;
      private int sum_ ;
      public boolean hasSum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getSum() {
        return sum_;
      }
      public Builder setSum(int value) {
        bitField0_ |= 0x00000004;
        sum_ = value;
        onChanged();
        return this;
      }
      public Builder clearSum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sum_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.github.sstone.amqp.proxy.calculator.AddResponse)
    }
    
    static {
      defaultInstance = new AddResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.github.sstone.amqp.proxy.calculator.AddResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"src/test/resource/calculator.proto\022\'co" +
      "m.github.sstone.amqp.proxy.calculator\"\"\n" +
      "\nAddRequest\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\"0\n\013Add" +
      "Response\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\013\n\003sum\030\003 " +
      "\002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_github_sstone_amqp_proxy_calculator_AddRequest_descriptor,
              new java.lang.String[] { "X", "Y", },
              com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.class,
              com.github.sstone.amqp.proxy.calculator.Calculator.AddRequest.Builder.class);
          internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_github_sstone_amqp_proxy_calculator_AddResponse_descriptor,
              new java.lang.String[] { "X", "Y", "Sum", },
              com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.class,
              com.github.sstone.amqp.proxy.calculator.Calculator.AddResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
